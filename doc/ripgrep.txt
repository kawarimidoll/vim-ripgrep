*ripgrep.txt*                           A plugin to search text by ripgrep

THIS IS EXPERIMENTAL PLUGIN AND UNDER DEVELOPMENT.
DESTRUCTIVE CHANGES MAY OCCUR.

Author: kyoh86 <me@kyoh86.dev>
License: MIT license

===============================================================================
CONTENTS                                               *ripgrep-contents*

USAGE                                                  |ripgrep-usage|
  FUNCTIONS                                            |ripgrep-function|
  COMMANDS                                             |ripgrep-command|
  VARIABLES                                            |ripgrep-variable|

===============================================================================
USAGE                                                  *ripgrep-usage*

*ripgrep* provides functions to search text by ripgrep(`rg`), to watch result,
and set results in quickfix.

-------------------------------------------------------------------------------
FUNCTIONS                                              *ripgrep-function*

                                                        *ripgrep#search()*
ripgrep#search({arg})

    Search keyword from current working directory by ripgrep (`rg`) command.
    {arg} is |String| may be pass for the ripgrep like below:
>
    call ripgrep#search('-w --igore-case foo')
<
    See `$ rg --help` for more details.

                                                        *ripgrep#call()*
ripgrep#call({cmd}, {cwd}, {rel})

    Call ripgrep with the specified cmd, cwd.
    - {cmd} is command-line |String| to call the ripgrep.
    - {cwd} is a path |String| of the working-directory to execute {cmd}.
    - {rel} is prefix |String| for filenames in the results.

    Example: >
    cd /tmp/foo/bar/baz
    call ripgrep#call('rg --json -w --igore-case foo', '/tmp/foo', '../../')
<
    Warning: You must pass a command-line calling ripgrep with the `--json`
    option.

                                                        *ripgrep#stop()*
ripgrep#stop()

    Stop `rg` in background process.


                                                        *ripgrep#wait()*
ripgrep#wait([{timeout}])

    Wait `rg` in background process being finished.
    It will be timeouted after {timeout} milli-second.


                                        *ripgrep#observe#add_observer()*
ripgrep#observe#add_observer({name}, {func})
    Add an observer to receive some events.
    All events send a message to {func} with a |Dictionary| parameter.

    Events:
      - `g:ripgrep#event#file_begin`
        Indicate that ripgrep begins searching in a file.
        Parameter:
          - `filename`: a path |String| searching.

      - `g:ripgrep#event#match`

        Indicate that ripgrep find a line matching the keyword.
        Parameter:
          - `filename`: a path |String| matched.
          - `lnum`:     a line |Number| matched.
          - `col`:      a column |Number| matched.
          - `end_col`:  an end-column |Number| matched.
          - `text`:     a content |String| matched.

      - `g:ripgrep#event#file_end`
        Indicate that ripgrep ended searching in a file.
        Parameter:
          - `filename`: a path |String| searching.
          - `stats`: stats |Dictionary| from ripgrep.

      - `g:ripgrep#event#finish`
        Indicate that ripgrep stopped.
        Parameter:
          - `status`: a status code |Number|.

      - `g:ripgrep#event#other`
        Indicate that an other json-entry is reported from ripgrep.
        Parameter is a |Dictionary| parsed from the json-line.

      - `g:ripgrep#event#error`
        Indicate that ripgrep puts a line into standard-error.
        Parameter:
          - `raw`: a raw line |String|.

      - `g:ripgrep#event#raw`
        Indicate that ripgrep puts a line being not formed as json.
        Parameter:
          - `raw`: a raw line |String|.

    Usage examples:
>
    function! ReceiveRipgrepBegin(params)
        echo a:params['filename']
    endfunction
    call ripgrep#observer#add_observer(
        \ ripgrep#event#file_begin,
        \ "ReceiveRipgrepBegin"
    \ )
<

>
    function! ReceiveRipgrepMatch(params)
        echo a:params['filename']
        echo a:params['lnum']
        echo a:params['col']
        echo a:params['end_col']
        echo a:params['text']
    endfunction
    call ripgrep#observer#add_observer(
        \ ripgrep#event#match,
        \ "ReceiveRipgrepMatch"
    \ )
<


-------------------------------------------------------------------------------
COMMANDS                                               *ripgrep-command*

THIS PLUGIN NEVER DEFINES ANY COMMANDS.
If you want call any functions from command, you can define them like below.

                                                             *:Ripgrep*
:Ripgrep {keyword} [{opts}...]

    Setting:
    >
        command! -nargs=+ -complete=file Ripgrep :call ripgrep#search(<q-args>)
<

    Search keyword from current working directory by ripgrep (`rg`) command.
    {opts} also may be pass for the ripgrep like below:
>
    :Ripgrep -w --ignore-case foo
<
    See `$ rg --help` for more details.


-------------------------------------------------------------------------------
VARIABLE                                               *ripgrep-variable*

*g:ripgrep#executable*
    Set a path |String| to executable "ripgrep" command.
    Default: v:null

*g:ripgrep#root_marks*
    Set mark |List| to find root-directory.
    Default: [".git"]

vim:filetype=help
